
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width" />
    <title>Login</title>
    @*登录样式*@
    <link href="~/Content/login/style.css" rel="stylesheet" />
    @*背景轮播*@
    <link href="~/Content/login/supersized.css" rel="stylesheet" />

    @*滚动条*@
    <link href="~/Content/login/jquery.slider.css" rel="stylesheet" />


    <script src="~/Scripts/jquery-2.2.4.min.js"></script>
    @*滚动条*@
    <script src="~/Scripts/login/jquery.slider.min.js"></script>
    @*页面轮播js*@
    <script src="~/Scripts/login/supersized.3.2.7.min.js"></script>
    <script src="~/Scripts/login/supersized-init.js"></script>
    @*layui*@
    <script src="~/Content/layui/layui.js"></script>
</head>
<body>
    <div class="page-container">
        <h1>会员登录</h1>
        <form>
            <input type="text" name="username" class="username" placeholder="用户名">
            <input type="password" name="password" class="password" placeholder="密码">
            <button type="button" id="cl"> 登录</button>
            <div class="error"><span>+</span></div>
            <div id="slider2" style="margin-top:20px"></div>
        </form>
        <div class="connect">
            <p>或用以下方式登录</p>
            <p>
                <a class="facebook" href="http://www.sucaijiayuan.com"></a>
                <a class="twitter" href="http://www.sucaijiayuan.com"></a>
            </p>
        </div>
    </div>

    <script>
        var slidercheck = false;
        //滚动条部分 start
        $("#slider2").slider({
            width: 300, // width
            height: 40, // height
            sliderBg: "rgb(134, 134, 131)", // 滑块背景颜色
            color: "#fff", // 文字颜色
            fontSize: 14, // 文字大小
            bgColor: "#33CC00", // 背景颜色
            textMsg: "按住滑块，拖拽验证", // 提示文字
            successMsg: "验证通过了哦", // 验证成功提示文字
            successColor: "red", // 滑块验证成功提示文字颜色
            time: 400, // 返回时间
            callback: function (result) { // 回调函数，true(成功),false(失败)
                slidercheck = result;
                $("#result2").text(result);
            }
        });
        // 还原
        $("#reset2").click(function () {
            $("#slider2").slider("restore");
        });
        //滚动条部分 end


        layui.use('layer', function () { //独立版的layer无需执行这一句
            var $ = layui.jquery, layer = layui.layer; //独立版的layer无需执行这一句

            $("#cl").click(function () {
                if (slidercheck == true) { layer.msg("验证通过"); }
                else { layer.msg("验证未通过"); }

            });

            //触发事件
            var active = {
                setTop: function () {
                    var that = this;
                    //多窗口模式，层叠置顶
                    layer.open({
                        type: 2 //此处以iframe举例
                        , title: '当你选择该窗体时，即会在最顶端'
                        , area: ['390px', '260px']
                        , shade: 0
                        , maxmin: true
                        , offset: [ //为了演示，随机坐标
                            Math.random() * ($(window).height() - 300)
                            , Math.random() * ($(window).width() - 390)
                        ]
                        , content: '//layer.layui.com/test/settop.html'
                        , btn: ['继续弹出', '全部关闭'] //只是为了演示
                        , yes: function () {
                            $(that).click();
                        }
                        , btn2: function () {
                            layer.closeAll();
                        }

                        , zIndex: layer.zIndex //重点1
                        , success: function (layero) {
                            layer.setTop(layero); //重点2
                        }
                    });
                }
                , confirmTrans: function () {
                    //配置一个透明的询问框
                    layer.msg('大部分参数都是可以公用的<br>合理搭配，展示不一样的风格', {
                        time: 20000, //20s后自动关闭
                        btn: ['明白了', '知道了', '哦']
                    });
                }
                , notice: function () {
                    //示范一个公告层
                    layer.open({
                        type: 1
                        , title: false //不显示标题栏
                        , closeBtn: false
                        , area: '300px;'
                        , shade: 0.8
                        , id: 'LAY_layuipro' //设定一个id，防止重复弹出
                        , btn: ['火速围观', '残忍拒绝']
                        , btnAlign: 'c'
                        , moveType: 1 //拖拽模式，0或者1
                        , content: '<div style="padding: 50px; line-height: 22px; background-color: #393D49; color: #fff; font-weight: 300;">你知道吗？亲！<br>layer ≠ layui<br><br>layer只是作为Layui的一个弹层模块，由于其用户基数较大，所以常常会有人以为layui是layerui<br><br>layer虽然已被 Layui 收编为内置的弹层模块，但仍然会作为一个独立组件全力维护、升级。<br><br>我们此后的征途是星辰大海 ^_^</div>'
                        , success: function (layero) {
                            var btn = layero.find('.layui-layer-btn');
                            btn.find('.layui-layer-btn0').attr({
                                href: 'http://www.layui.com/'
                                , target: '_blank'
                            });
                        }
                    });
                }
                , offset: function (othis) {
                    var type = othis.data('type')
                        , text = othis.text();

                    layer.open({
                        type: 1
                        , offset: type //具体配置参考：http://www.layui.com/doc/modules/layer.html#offset
                        , id: 'layerDemo' + type //防止重复弹出
                        , content: '<div style="padding: 20px 100px;">' + text + '</div>'
                        , btn: '关闭全部'
                        , btnAlign: 'c' //按钮居中
                        , shade: 0 //不显示遮罩
                        , yes: function () {
                            layer.closeAll();
                        }
                    });
                }
            };

            $('#layerDemo .layui-btn').on('click', function () {
                var othis = $(this), method = othis.data('method');
                active[method] ? active[method].call(this, othis) : '';
            });

        });
    </script>
</body>
</html>
